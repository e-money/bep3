syntax = "proto3";
package bep3;

option go_package = "github.com/e-money/bep3/module/types";

import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";
import "cosmos/base/v1beta1/coin.proto";
import "bep3/swap.proto";

service Msg {

  rpc CreateAtomicSwap(MsgCreateAtomicSwap)
      returns (MsgCreateAtomicSwapResponse);

  rpc ClaimAtomicSwap(MsgClaimAtomicSwap)
      returns (MsgClaimAtomicSwapResponse);

  rpc RefundAtomicSwap(MsgRefundAtomicSwap)
      returns (MsgRefundAtomicSwapResponse);
}

message MsgCreateAtomicSwapResponse {
  string random_number_hash = 1 [
    (gogoproto.moretags) = "yaml:\"random_number_hash\""
  ];
  string swap_id = 2 [
    (gogoproto.customname) = "SwapID",
    (gogoproto.moretags) = "yaml:\"swap_id\""
  ];
}

message MsgClaimAtomicSwapResponse {
  string random_number_hash = 1 [
    (gogoproto.moretags) = "yaml:\"random_number_hash\""
  ];
  int64 timestamp = 2 [(gogoproto.moretags) = "yaml:\"timestamp\""];
}

message MsgRefundAtomicSwapResponse {
  string random_number_hash = 1 [
    (gogoproto.moretags) = "yaml:\"random_number_hash\""
  ];
  int64 timestamp = 2 [(gogoproto.moretags) = "yaml:\"timestamp\""];
}